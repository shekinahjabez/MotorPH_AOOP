/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.payroll.UI;

import com.payroll.domain.Employee;
import com.payroll.domain.IT;
import com.payroll.domain.Person;
import com.payroll.domain.LeaveBalance;
import com.payroll.domain.Person;
import com.payroll.DAO.ITDAO;
import com.payroll.DAO.HRDAO;
import com.payroll.DAO.EmployeeDAO;
import com.payroll.subdomain.ComboItem;
import com.payroll.subdomain.EmployeePosition;
import com.payroll.subdomain.EmployeeStatus;
import com.payroll.util.DatabaseConnection;
import javax.swing.JOptionPane;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import org.apache.commons.lang3.StringUtils;
import com.toedter.calendar.JDateChooser;
import java.util.Date;


/**
 *
 * @author leniejoice
 */
public class SignUp extends javax.swing.JFrame {
    
    static void visible(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * Creates new form LogIn
     */
  
    private ITDAO empAccountService;
    private HRDAO hrService;
    private EmployeeDAO leaveDetailsService;
    private com.toedter.calendar.JDateChooser birthdayChooser;
    private long validatedPagibig;
    private long validatedPhilhealth;

    

    public SignUp() {
        initComponents();
        try {
            Connection connection = DatabaseConnection.getConnection();
            this.empAccountService = new ITDAO(connection);
            this.hrService = new HRDAO(connection);
            this.leaveDetailsService = new EmployeeDAO(connection);
        } catch (SQLException e) {
            e.printStackTrace(); // You can show a message dialog here for better UX
        }

        loadAllPositions();
        loadAllStatus();
        loadAllEmployee();
    }

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        usernameTField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordTField = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        lastNameTField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        firstNameTField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        addressTField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        phoneTField = new javax.swing.JTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        statusDropdown = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        positionDropdown = new javax.swing.JComboBox<>();
        supervisorDropdown = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        sssTField = new javax.swing.JTextField();
        tinTField = new javax.swing.JTextField();
        pagibigTField = new javax.swing.JTextField();
        philhealthTField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        signUp = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        backtoLoginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton2.setText("Login");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mph logo (1).png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel4.setText("Username");

        usernameTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setText("Password");

        passwordTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel7.setText("Last Name");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel6.setText("First Name");

        firstNameTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTFieldActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel9.setText("Address");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel16.setText("Birthday");

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel15.setText("Phone #");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lastNameTField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(passwordTField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameTField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addressTField)
                                .addGap(1, 1, 1))
                            .addComponent(firstNameTField)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(phoneTField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(usernameTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lastNameTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(firstNameTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(addressTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(phoneTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(500, 500));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel10.setText("Supervisor");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel12.setText("SSS #");

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel13.setText("PhilHealth #");

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel14.setText("Status");

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel17.setText("Position");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel18.setText("PAG-IBIG #");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel19.setText("TIN #");

        philhealthTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                philhealthTFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel19)))
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(positionDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(supervisorDropdown, javax.swing.GroupLayout.Alignment.LEADING, 0, 138, Short.MAX_VALUE)
                                .addComponent(sssTField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tinTField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(statusDropdown, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pagibigTField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(philhealthTField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(supervisorDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(statusDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(positionDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sssTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(tinTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(pagibigTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(philhealthTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mph logo (1).png"))); // NOI18N

        signUp.setBackground(new java.awt.Color(255, 102, 51));
        signUp.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        signUp.setForeground(new java.awt.Color(255, 255, 255));
        signUp.setText("Sign Up");
        signUp.setBorder(null);
        signUp.setMargin(new java.awt.Insets(6, 14, 6, 14));
        signUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setText("Already have an account?");

        backtoLoginButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        backtoLoginButton.setText("Log in");
        backtoLoginButton.setContentAreaFilled(false);
        backtoLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtoLoginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(185, 185, 185))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(backtoLoginButton)
                        .addGap(230, 230, 230))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(signUp, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(signUp, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(12, 12, 12)
                .addComponent(backtoLoginButton)
                .addGap(23, 23, 23))
        );

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/motor.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void philhealthTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_philhealthTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_philhealthTFieldActionPerformed

    private void backtoLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtoLoginButtonActionPerformed
        LogIn newClassInstance = new LogIn ();
        newClassInstance.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backtoLoginButtonActionPerformed

    private void firstNameTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTFieldActionPerformed

    private void signUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpActionPerformed
        Person empDetails = updateEmpDetailValues();
        IT empAccount = updateEmpAccountValues();
        if (!validateRequiredFields(empAccount, empDetails)) {
            return; // Stop execution if validation fails
        }

        if (hrService.isDuplicateEmployee(empDetails)) {
            JOptionPane.showMessageDialog(this, "An employee with these details already exists.", "Duplicate Employee", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                // --- Start of the try block ---
                // Save the employee details first. This might throw an error.
                hrService.addEmployeeDetails(empDetails);

                // If the first save was successful, save the account details.
                empAccountService.saveUserAccount(empAccount, empDetails);

                // If both saves were successful, create the initial leave balance.
                LeaveBalance leaveBalance = new LeaveBalance();
                leaveBalance.setEmpID(empDetails.getEmpID());
                leaveDetailsService.saveLeaveBalance(leaveBalance);

                // Show a success message and navigate away.
                JOptionPane.showMessageDialog(this, "Account created successfully! Please log in.", "Success", JOptionPane.INFORMATION_MESSAGE);
                new LogIn().setVisible(true);
                this.dispose();

            } catch (SQLException e) {
                // --- This block runs ONLY if a database error occurs ---
                e.printStackTrace(); // Good for debugging
                JOptionPane.showMessageDialog(this, "A database error occurred while creating the account.\n" + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
       
    }//GEN-LAST:event_signUpActionPerformed

    private void passwordTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTFieldActionPerformed

    private void usernameTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTFieldActionPerformed
    
    private void loadAllPositions(){
        List<EmployeePosition> positions = hrService.getAllPosition();
        positionDropdown.addItem(new ComboItem(null,"Select Position"));
        for(EmployeePosition empPosition : positions){
            positionDropdown.addItem(new ComboItem(empPosition.getId(),empPosition.getPosition()));
        }
    }  
    
    private void loadAllStatus(){
        List<EmployeeStatus> statuses = hrService.getAllStatuses();
        statusDropdown.addItem(new ComboItem(null,"Select Status"));
        for(EmployeeStatus empStatus : statuses){
            statusDropdown.addItem(new ComboItem(empStatus.getId(),empStatus.getStatus()));
        }
    }
    
    private void loadAllEmployee(){
        List<Person> allEmployee = hrService.getAllEmployee();
        supervisorDropdown.addItem(new ComboItem(null,"Select Supervisor"));
        for(Person employeeDetails: allEmployee){
            supervisorDropdown.addItem(new ComboItem(employeeDetails.getEmpID(),employeeDetails.getFormattedName()));
        }
    }
    private IT updateEmpAccountValues(){
        IT empAccount = new IT();
        empAccount.setEmpUserName(usernameTField.getText());
        empAccount.setEmpPassword(passwordTField.getText());
        return empAccount;
    }
    
    
       
    private boolean validateRequiredFields(IT empAccount, Person empDetails){
        List<String> errors = new ArrayList<>();
        if (empAccount == null) {
            errors.add("Employee account cannot be null.");
        } else {
            if (StringUtils.isEmpty(empAccount.getEmpUserName())) {
                errors.add("Username");
            }
            if (StringUtils.isEmpty(empAccount.getEmpPassword())) {
                errors.add("Password");
            }
        }
        
        if (empDetails == null) {
            errors.add("Employee details cannot be null.");
        } else {
            // First Name - required and must contain only letters
            if (StringUtils.isEmpty(empDetails.getFirstName())) {
                errors.add("First Name is required.");
            } else if (!empDetails.getFirstName().matches("^[A-Za-z\\-]+$")) {
                errors.add("First Name must contain letters and dashes only.");
            }

            // Last Name - required and must contain only letters
            if (StringUtils.isEmpty(empDetails.getLastName())) {
                errors.add("Last Name is required.");
            } else if (!empDetails.getLastName().matches("^[A-Za-z\\-]+$")) {
                errors.add("Last Name must contain letters and dashes only.");
            }

            // Address - required and max 250 characters
            if (StringUtils.isEmpty(empDetails.getEmpAddress())) {
                errors.add("Address is required.");
            } else if (empDetails.getEmpAddress().length() > 250) {
                errors.add("Address must not exceed 250 characters.");
            }

            // Birthday - required and must be at least 18 years old
            if (empDetails.getEmpBirthday() == null) {
                errors.add("Birthday is required.");
            } else {
                Calendar dob = Calendar.getInstance();
                dob.setTime(empDetails.getEmpBirthday());
                Calendar today = Calendar.getInstance();
                int age = today.get(Calendar.YEAR) - dob.get(Calendar.YEAR);
                if (today.get(Calendar.DAY_OF_YEAR) < dob.get(Calendar.DAY_OF_YEAR)) {
                    age--;
                }
                if (age < 18) {
                    errors.add("Employee must be at least 18 years old.");
                }
            }

            // Phone Number - required and digits only
            if (StringUtils.isEmpty(empDetails.getEmpPhoneNumber())) {
                errors.add("Phone Number is required.");
            } else if (!empDetails.getEmpPhoneNumber().matches("^[\\d\\-\\+]+$")) {
                errors.add("Phone Number must contain only digits, dashes (-), or plus sign (+).");
            }

            // Status
            if (empDetails.getEmpStatus() == null) {
                errors.add("Status is required.");
            }

            // Position
            if (empDetails.getEmpPosition() == null) {
                errors.add("Position is required.");
            }

            // Supervisor
            if (empDetails.getEmpImmediateSupervisor() == null) {
                errors.add("Immediate Supervisor is required.");
            }

            // SSS - required and digits only
            if (StringUtils.isEmpty(empDetails.getEmpSSS())) {
                errors.add("SSS# is required.");
            } else if (!empDetails.getEmpSSS().matches("^\\d+$")) {
                errors.add("SSS# must contain digits only.");
            }

            // TIN - required and digits only
            if (StringUtils.isEmpty(empDetails.getEmpTIN())) {
                errors.add("TIN# is required.");
            } else if (!empDetails.getEmpTIN().matches("^\\d+$")) {
                errors.add("TIN# must contain digits only.");
            }

            String pagibigInput = pagibigTField.getText().trim();
            if (StringUtils.isEmpty(pagibigInput)) {
                errors.add("PAG-IBIG# is required.");
            } else if (!pagibigInput.matches("^\\d+$")) {
                errors.add("PAG-IBIG# must contain digits only.");
            } else {
                try {
                    long pagibig = Long.parseLong(pagibigInput);
                    if (pagibig <= 0) {
                        errors.add("PAG-IBIG# must be a positive number.");
                    } else {
                        validatedPagibig = pagibig; // ✔️ store for later use
                    }
                } catch (NumberFormatException e) {
                    errors.add("PAG-IBIG# is not a valid number.");
                }
            }

            String philHealthInput = philhealthTField.getText().trim();
            if (StringUtils.isEmpty(philHealthInput)) {
                errors.add("PhilHealth# is required.");
            } else if (!philHealthInput.matches("^\\d+$")) {
                errors.add("PhilHealth# must contain digits only.");
            } else {
                try {
                    long philhealth = Long.parseLong(philHealthInput);
                    if (philhealth <= 0) {
                        errors.add("PhilHealth# must be a positive number.");
                    } else {
                        validatedPhilhealth = philhealth; // ✔️ store for later use
                    }
                } catch (NumberFormatException e) {
                    errors.add("PhilHealth# is not a valid number.");
                }
            }
        }
        if (!errors.isEmpty()) {
              String errorMessage = "The following required fields are missing or invalid:\n\n" + String.join("\n", errors);
              JOptionPane.showMessageDialog(null, errorMessage, "Validation Error", JOptionPane.ERROR_MESSAGE);
              return false; // Prevents execution instead of throwing an exception
        }

         return true; // All fields are valid
    }
    private Person updateEmpDetailValues(){
        String lastname = lastNameTField.getText().trim() !=null ? lastNameTField.getText() : "";
        String firstname= firstNameTField.getText().trim() !=null ?  firstNameTField.getText().trim() : "";
        String address = addressTField.getText().trim() !=null ? addressTField.getText().trim():"";
        String phoneNumber = phoneTField.getText().trim() !=null ? phoneTField.getText().trim() :"";
        String sss = sssTField.getText().trim() !=null ? sssTField.getText().trim() :"";
        String tin = tinTField.getText().trim() !=null ? tinTField.getText().trim():"";
        long pagibig = 0;
        String pagibigInput = pagibigTField.getText().trim();
        if (!pagibigInput.isEmpty() && pagibigInput.matches("^\\d+$")) {
            pagibig = Long.parseLong(pagibigInput);
        }

        long philhealth = 0;
        String philhealthInput = philhealthTField.getText().trim();
        if (!philhealthInput.isEmpty() && philhealthInput.matches("^\\d+$")) {
            philhealth = Long.parseLong(philhealthInput);
        }
    
        
        Person empDetails = new Employee();
        
        empDetails.setLastName(lastname);
        empDetails.setFirstName(firstname);
        if (dateChooser != null && dateChooser.getDate() != null) {
            Date selectedDate = dateChooser.getDate();
            empDetails.setEmpBirthday(new java.sql.Date(selectedDate.getTime())); // ← direct assignment
        }
        
        empDetails.setEmpAddress(address);
        empDetails.setEmpPhoneNumber(phoneNumber);
        empDetails.setEmpPagibig(pagibig);
        empDetails.setEmpSSS(sss);
        empDetails.setEmpTIN(tin);
        empDetails.setEmpPhilHealth(philhealth);
        
        ComboItem positionValue = (ComboItem) positionDropdown.getSelectedItem();
        ComboItem statusValue = (ComboItem) statusDropdown.getSelectedItem();
        ComboItem supervisorValue = (ComboItem) supervisorDropdown.getSelectedItem();
        
        if(positionValue.getKey() != null){
            empDetails.setEmpPosition(hrService.getPositionById(positionValue.getKey()));
        }
        if(statusValue.getKey() != null){
            empDetails.setEmpStatus(hrService.getStatusById(statusValue.getKey()));
        }
        if(supervisorValue.getKey() !=null){
            empDetails.setEmpImmediateSupervisor(hrService.getByEmpID(supervisorValue.getKey()));  
        }

        return empDetails;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTField;
    private javax.swing.JButton backtoLoginButton;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JTextField firstNameTField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField lastNameTField;
    private javax.swing.JTextField pagibigTField;
    private javax.swing.JPasswordField passwordTField;
    private javax.swing.JTextField philhealthTField;
    private javax.swing.JTextField phoneTField;
    private javax.swing.JComboBox<ComboItem> positionDropdown;
    private javax.swing.JButton signUp;
    private javax.swing.JTextField sssTField;
    private javax.swing.JComboBox<ComboItem> statusDropdown;
    private javax.swing.JComboBox<ComboItem> supervisorDropdown;
    private javax.swing.JTextField tinTField;
    private javax.swing.JTextField usernameTField;
    // End of variables declaration//GEN-END:variables

    private void systemExit()
    {
    WindowEvent winCloseing = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
    }

}
